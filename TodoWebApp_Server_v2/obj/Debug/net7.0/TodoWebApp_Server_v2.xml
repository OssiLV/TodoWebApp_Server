<?xml version="1.0"?>
<doc>
    <assembly>
        <name>TodoWebApp_Server_v2</name>
    </assembly>
    <members>
        <member name="M:TodoWebApp_Server_v2.Controllers.ColorController.GetAllColor">
            <summary>
            Get all Color
            </summary>
        </member>
        <member name="M:TodoWebApp_Server_v2.Controllers.ColorController.GetColorById(System.Int64)">
            <summary>
            Get color by id
            </summary>
        </member>
        <member name="M:TodoWebApp_Server_v2.Controllers.ColorController.CreateColor(TodoWebApp_Server_v2.Dtos.ColorDto.ColorCreateResquestDto)">
            <summary>
            Create a color
            </summary>
        </member>
        <member name="M:TodoWebApp_Server_v2.Controllers.ColorController.UpdateColorById(System.Int64,TodoWebApp_Server_v2.Dtos.ColorDto.ColorUpdateRequestDto)">
            <summary>
            Update a color by id
            </summary>
        </member>
        <member name="M:TodoWebApp_Server_v2.Controllers.ColorController.DeleteColorById(System.Int64)">
            <summary>
            Delete a color
            </summary>
        </member>
        <member name="M:TodoWebApp_Server_v2.Controllers.ProjectController.GetAllProjectAndSectionByUserId(System.Guid)">
            <summary>
            Get all projects by User_id
            </summary>
        </member>
        <member name="M:TodoWebApp_Server_v2.Controllers.ProjectController.GetAllProjectByUserId(System.Guid)">
            <summary>
            Get all projects by User_id
            </summary>
        </member>
        <member name="M:TodoWebApp_Server_v2.Controllers.ProjectController.DeleteProjectById(System.String)">
            <summary>
            Get a Project By Name
            </summary>
        </member>
        <member name="M:TodoWebApp_Server_v2.Controllers.ProjectController.CreateProject(TodoWebApp_Server_v2.Dtos.ProjectDto.ProjectCreateRequestDto)">
            <summary>
            Create a Project
            </summary>
        </member>
        <member name="M:TodoWebApp_Server_v2.Controllers.ProjectController.UpdateProjectById(System.Int64,TodoWebApp_Server_v2.Dtos.ProjectDto.ProjectUpdateRequestDto)">
            <summary>
            Update a Project By Id
            </summary>
        </member>
        <member name="M:TodoWebApp_Server_v2.Controllers.ProjectController.ForceDeleteProjectById(System.Int64)">
            <summary>
            Force Delete a Project By Id
            </summary>
        </member>
        <member name="M:TodoWebApp_Server_v2.Controllers.ProjectController.SoftDeleteProjectById(System.Int64)">
            <summary>
            Soft Delete a Project By Id
            </summary>
        </member>
        <member name="M:TodoWebApp_Server_v2.Controllers.ProjectController.UndoDeleteProjectById(System.Int64)">
            <summary>
            Undo Delete a Project By Id
            </summary>
        </member>
        <member name="M:TodoWebApp_Server_v2.Controllers.SectionController.CreateSection(TodoWebApp_Server_v2.Dtos.SectionDto.SectionCreateRequestDto)">
            <summary>
            Create section
            </summary>
        </member>
        <member name="M:TodoWebApp_Server_v2.Controllers.SectionController.GetAllSectionByProjectId(System.Int64)">
            <summary>
            Get all Sections by project id
            </summary>
        </member>
        <member name="M:TodoWebApp_Server_v2.Controllers.TaskTodoController.CreateTaskTodo(TodoWebApp_Server_v2.Dtos.TaskTodoDto.TaskTodoCreateRequestDto)">
            <summary>
            Create a Task Todo by Section-Id
            </summary>
        </member>
        <member name="M:TodoWebApp_Server_v2.Controllers.TaskTodoController.GetAllTaskTodoInSectionByProjectId(System.Guid)">
            <summary>
            Get all Task Todo by User_id
            </summary>
        </member>
        <member name="M:TodoWebApp_Server_v2.Controllers.TaskTodoController.GetAllTaskTodoInSectionByProjectId(System.Int64)">
            <summary>
            Get all Task Todo in All Sections By Project-id
            </summary>
        </member>
        <member name="M:TodoWebApp_Server_v2.Controllers.TaskTodoController.HanldeCompletedTaskTodo(System.Int64)">
            <summary>
            Update Task Completed
            </summary>
        </member>
        <member name="M:TodoWebApp_Server_v2.Controllers.TaskTodoController.HanldeUndoCompletedTaskTodo(System.Int64)">
            <summary>
            Undo task completed
            </summary>
        </member>
        <member name="M:TodoWebApp_Server_v2.Controllers.TaskTodoController.UpdatePriorityById(System.Int64,TodoWebApp_Server_v2.Dtos.TaskTodoDto.TaskTodoPriorityUpdateRequest)">
            <summary>
            Update priotity for TaskTodo
            </summary>
        </member>
        <member name="M:TodoWebApp_Server_v2.Controllers.TaskTodoController.UpdateDueDateById(System.Int64,TodoWebApp_Server_v2.Dtos.TaskTodoDto.TaskTodoDueDateUpdateRequest)">
            <summary>
            Update Due Date for TaskTodo
            </summary>
        </member>
        <member name="M:TodoWebApp_Server_v2.Controllers.TaskTodoController.RescheduleForManyTasks(TodoWebApp_Server_v2.Dtos.TaskTodoDto.TaskTodoRescheduleRequestDto)">
            <summary>
            Reschedule task with array id
            </summary>
        </member>
        <member name="M:TodoWebApp_Server_v2.Controllers.UserController.HandleUploadAvatar(TodoWebApp_Server_v2.Dtos.UserDto.UploadImageRequestDto)">
            <summary>
             Upload avatar with user id
            </summary>
        </member>
        <member name="M:TodoWebApp_Server_v2.Controllers.UserController.UpdatePassword(TodoWebApp_Server_v2.Dtos.UserDto.UpdatePasswordRequestDto)">
            <summary>
             Update password with user id
            </summary>
        </member>
        <member name="M:TodoWebApp_Server_v2.Controllers.UserController.UpdateEmail(TodoWebApp_Server_v2.Dtos.UserDto.UpdateEmailRequestDto)">
            <summary>
             Update email with user id
            </summary>
        </member>
        <member name="M:TodoWebApp_Server_v2.Controllers.UserController.UpdateUserName(TodoWebApp_Server_v2.Dtos.UserDto.UpdateUserNameRequestDto)">
            <summary>
             Update User name with user id
            </summary>
        </member>
        <member name="M:TodoWebApp_Server_v2.Controllers.UserController.UpdateTheme(TodoWebApp_Server_v2.Dtos.UserDto.UpdateThemeRequestDto)">
            <summary>
             Update Theme with user id
            </summary>
        </member>
        <member name="M:TodoWebApp_Server_v2.Controllers.UserController.UpdateLanguage(TodoWebApp_Server_v2.Dtos.UserDto.UpdateLanguageRequestDto)">
            <summary>
             Update Language with user id
            </summary>
        </member>
        <member name="M:TodoWebApp_Server_v2.Controllers.UserController.DeleteAccount(System.Guid)">
            <summary>
             Delete Account with user id
            </summary>
        </member>
        <member name="M:TodoWebApp_Server_v2.Controllers.UserController.DeleteAvatar(System.Guid)">
            <summary>
             Delete User image with user id
            </summary>
        </member>
        <member name="T:TodoWebApp_Server_v2.Migrations.InitialCreate">
            <inheritdoc />
        </member>
        <member name="M:TodoWebApp_Server_v2.Migrations.InitialCreate.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:TodoWebApp_Server_v2.Migrations.InitialCreate.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:TodoWebApp_Server_v2.Migrations.InitialCreate.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:TodoWebApp_Server_v2.Migrations.Delete_UserImage">
            <inheritdoc />
        </member>
        <member name="M:TodoWebApp_Server_v2.Migrations.Delete_UserImage.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:TodoWebApp_Server_v2.Migrations.Delete_UserImage.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:TodoWebApp_Server_v2.Migrations.Delete_UserImage.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:TodoWebApp_Server_v2.Migrations.Add_TypeString_UserImage">
            <inheritdoc />
        </member>
        <member name="M:TodoWebApp_Server_v2.Migrations.Add_TypeString_UserImage.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:TodoWebApp_Server_v2.Migrations.Add_TypeString_UserImage.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:TodoWebApp_Server_v2.Migrations.Add_TypeString_UserImage.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
    </members>
</doc>
